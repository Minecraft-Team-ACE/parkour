plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
}

import net.fabricmc.loom.task.RemapJarTask

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
    shadow
    api.extendsFrom shadow
}

repositories {

}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

shadowJar {
    dependsOn jar
    configurations = [project.configurations.shadow]
    archiveClassifier.set('dev')
}
remapJar.dependsOn(shadowJar)

task shadowRemapJar(type: RemapJarTask) {
    dependsOn shadowJar

    input.set(file("${project.buildDir}/libs/$archivesBaseName-${project.version}-dev.jar"))
    archiveFileName = "${archivesBaseName}-${project.version}.jar"
    addNestedDependencies.set(true)
}
build.dependsOn(shadowRemapJar)

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}
